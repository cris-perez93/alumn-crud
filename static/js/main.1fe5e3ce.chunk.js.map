{"version":3,"sources":["context/alumnos/alumnosContext.js","components/Login.js","components/AgregarTema.js","components/ListaAlumnos.js","components/Tema.js","img/avatar.png","components/ListaTemas.js","components/Banner.js","components/Crud.js","types/index.js","context/alumnos/alumnosReducer.js","context/alumnos/alumnosState.js","App.js","reportWebVitals.js","index.js"],"names":["alumnosContext","createContext","Login","usuario","guardarUsuario","mostrarUsuario","useContext","nombre","className","onSubmit","e","preventDefault","trim","method","type","name","value","onChange","target","to","AgregarTema","alumnoContext","temaseleccionado","errorformulario","alumno","agregarTema","errorFormulario","obtenerTema","actualizarTema","useEffect","setTema","nota","useState","tema","alumnoClick","handleChange","alumnoId","id","estado","placeholder","ListaAlumnos","formulario","mostrarerror","mostrarFormulario","alumnosLista","obtenerAlumnos","agregarAlumnos","mostrarError","setAlumno","onClick","length","map","Tema","eliminarTema","modificarEstado","setTemaActual","onClickModificarEstado","seleccionarTema","ListaTemas","temasalumno","eliminarAlumno","alt","src","avatar","Banner","Crud","MOSTRAR_FORMULARIO","OBTENER_ALUMNOS","AGREGAR_ALUMNOS","MOSTRAR_ERROR","ALUMNO_CLICK","ELIMINAR_ALUMNO","OBTENER_TEMA","AGREGAR_TEMA","ERROR_FORMULARIO","ELIMINAR_TEMA","ESTADO_TEMA","TEMA_ACTUAL","TEMA_ACTUALIZADO","state","action","payload","filter","temas","tarea","AlumnosState","props","useReducer","alumnosReducer","dispatch","Provider","uuidv4","children","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fe5e3ce.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst alumnosContext = createContext();\r\n\r\nexport default alumnosContext;","\r\nimport {useContext } from 'react';\r\nimport alumnosContext from \"../context/alumnos/alumnosContext\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nconst Login = ({usuario, guardarUsuario}) => {\r\n\r\n\r\n    const alumnoContext = useContext(alumnosContext);\r\n    const {mostrarUsuario} = alumnoContext;\r\n      \r\n   \r\n    const {nombre} = usuario;\r\n\r\n\r\n    \r\n    \r\n    const onChange = e =>{\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = e =>{\r\n         e.preventDefault();\r\n\r\n         //Validación\r\n         if (nombre.trim() === '' ) {\r\n             return;\r\n         }\r\n\r\n         //Pasarlo al action\r\n         mostrarUsuario(usuario)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            \r\n            <form onSubmit={onSubmit} method=\"post\" className=\"form\">\r\n\r\n                <h1 className=\"title-login\">Login</h1>\r\n\r\n                <div className=\"form__field\">\r\n                    <label>User</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name='nombre'\r\n                    value= {nombre}\r\n                    onChange ={onChange}\r\n                 />\r\n                </div>\r\n\r\n             \r\n\r\n                <div className=\"form__field\">\r\n                  \r\n                    <Link\r\n                      to = 'alumn-crud/crud'\r\n                      \r\n                          \r\n                    ><button  className=\"btn-login\" type=\"submit\" value=\"Login\">Login</button></Link>\r\n                </div>\r\n \r\n\r\n                </form>\r\n\r\n                \r\n\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default Login;","import { useContext, useEffect, useState } from \"react\";\r\nimport alumnosContext from \"../context/alumnos/alumnosContext\";\r\n\r\n\r\n\r\nconst AgregarTema = () => {\r\n\r\n    const alumnoContext = useContext(alumnosContext);\r\n    const {temaseleccionado,errorformulario, alumno, agregarTema,errorFormulario, obtenerTema, actualizarTema} = alumnoContext;\r\n\r\n     useEffect(()=>{\r\n          if (temaseleccionado !== null){\r\n              setTema(temaseleccionado)\r\n          }else {\r\n              setTema({\r\n                  nombre:'',\r\n                  nota:''\r\n\r\n              })\r\n          }\r\n     },[temaseleccionado]);\r\n\r\n\r\n\r\n    const [tema, setTema] = useState({\r\n        nombre:'',\r\n        nota:''\r\n    })\r\n\r\n    // extraer valores del state \r\n\r\n    const {nombre, nota} = tema;\r\n\r\n    if( !alumno ) return null;\r\n\r\n     //Array destrcuturing\r\n     const [alumnoClick] = alumno;\r\n\r\n     //Leer los valores del input\r\n     const handleChange = e =>{\r\n        setTema({\r\n            ...tema,\r\n            [e.target.name] : e.target.value\r\n        })\r\n     }\r\n\r\n     \r\n\r\n\r\n     const onSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        //validar\r\n        if (nombre ==='' || nota === ''){\r\n            errorFormulario()\r\n            return;\r\n        }\r\n\r\n        // revisa si es edicion o nuevo examen\r\n        if(temaseleccionado===null){\r\n            tema.alumnoId = alumnoClick.id;\r\n            tema.estado = false;\r\n            agregarTema(tema);\r\n\r\n        } else {\r\n            //actualizar tarea existente\r\n           actualizarTema(tema)\r\n        }\r\n\r\n    \r\n        //obtener y filtrar los temas del alumno(mostrarlo)\r\n        obtenerTema(alumnoClick.id)\r\n\r\n        //reiniciar form \r\n        setTema({\r\n            nombre:'',\r\n            nota :''\r\n        })\r\n    };\r\n    \r\n\r\n    \r\n\r\n\r\n    return (\r\n        <div className=\"container-banner\">\r\n            \r\n            <div className=\"container-agregar-examen\">\r\n                   \r\n\r\n                    <form onSubmit={onSubmit} className=\"form-banner\">\r\n                        <div className=\"container-input\">\r\n                            <label>Agrega examen</label>\r\n                            <input\r\n                            type =\"text\"\r\n                            className=\"input-temas\"\r\n                            placeholder=\"Tema a examinar...\"\r\n                            name=\"nombre\"\r\n                            value={nombre}\r\n                            onChange={handleChange}\r\n                            />\r\n                        </div>\r\n\r\n                        \r\n                    \r\n                        <div className=\"container-input\">\r\n                        <label>Agrega una califación</label>\r\n                            <input\r\n                            type =\"text\"\r\n                            className=\"input-temas\"\r\n                            placeholder=\"Nota examen\"\r\n                            name=\"nota\"\r\n                            value={nota}\r\n                            onChange={handleChange}\r\n                            />\r\n                        </div>\r\n\r\n                       \r\n                       \r\n                            <input\r\n                            type=\"submit\"\r\n                            className=\"btn-temas\"\r\n                            value ={temaseleccionado ? 'Editar Examen' : 'Agregar Examen'}\r\n                            />\r\n                        \r\n                        \r\n\r\n                    </form>\r\n                    {errorformulario ? <p className=\"error-formulario\">Rellena los campos</p> :null}\r\n              </div>\r\n         </div>\r\n      );\r\n}\r\n \r\nexport default AgregarTema;","import { useState, useContext, useEffect } from \"react\";\r\nimport alumnosContext from \"../context/alumnos/alumnosContext\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ListaAlumnos = () => {\r\n\r\n     const alumnoContext = useContext(alumnosContext);\r\n     const {formulario, mostrarerror, mostrarFormulario, alumnosLista, obtenerAlumnos, agregarAlumnos, mostrarError, alumnoClick, obtenerTema} = alumnoContext;\r\n\r\n     const [alumno, setAlumno] = useState({\r\n         nombre: ''\r\n     });\r\n\r\n     const {nombre} = alumno;\r\n\r\n     const onChangeAlumno = e =>{\r\n         setAlumno({\r\n             ...alumno,\r\n             [e.target.name] : e.target.value\r\n         })\r\n     }\r\n\r\n     const onSubmitAlumno = e =>{\r\n         e.preventDefault();\r\n\r\n         //Validar campos vacios\r\n          if (nombre ===''){\r\n              mostrarError()\r\n              return;\r\n          }\r\n\r\n         //agregar al state\r\n\r\n         agregarAlumnos(alumno)\r\n\r\n         //Reiniciar el form\r\n\r\n         setAlumno({\r\n             nombre :''\r\n         })\r\n     }\r\n\r\n     \r\n\r\n     const onClickFormulario = () =>{\r\n        mostrarFormulario()\r\n     }\r\n\r\n  \r\n     useEffect(()=>{\r\n        obtenerAlumnos();\r\n        // eslint-disable-next-line\r\n     },[])\r\n\r\n    \r\n\r\n     const seleccionarAlumno = id =>{\r\n        alumnoClick(id); // fijar un alumno\r\n        obtenerTema(id); // filtrar los temas \r\n\r\n     }\r\n\r\n     \r\n    \r\n     \r\n    \r\n    \r\n return (\r\n     \r\n        <div className=\"container-lista\">\r\n                 \r\n\r\n                 <h1 className=\"title-alumnos\">Lista de alumnos</h1>\r\n\r\n                 <button\r\n                   type =\"button\"\r\n                   className=\"btn-agregar-alumno\"\r\n                   onClick={onClickFormulario}\r\n                 >Nuevo Alumno</button>\r\n\r\n                {formulario ?  <form\r\n                   className=\"form-agregar-alumno\"\r\n                   onSubmit ={onSubmitAlumno}\r\n                 >\r\n                     <input\r\n                      className=\"input-text\"\r\n                      placeholder=\"Nombre Alumno\"\r\n                      type=\"text\"\r\n                      name=\"nombre\"\r\n                      value = {nombre}\r\n                      onChange={onChangeAlumno}\r\n\r\n                     ></input>\r\n\r\n                     <input\r\n                       type=\"submit\"\r\n                       className=\"btn-enviar-alumno\"\r\n                       value=\"Agregar a la lista\"\r\n                     ></input>\r\n\r\n                 </form> : null}\r\n\r\n                 { mostrarerror ? <p className=\"error_formulario\">Añade un alumno</p>    :null}\r\n\r\n                 <h2>Alumnos</h2>\r\n\r\n                \r\n\r\n                 <ul className=\"listado-alumnos\">\r\n                     {alumnosLista.length === 0 \r\n                       ? (<p>Agrega un nuevo alumno</p>)\r\n                       \r\n                       :alumnosLista.map(alumno =>(\r\n                        <li key ={alumno.id} >\r\n                        <button\r\n                          onClick={()=> seleccionarAlumno(alumno.id)}\r\n                          type=\"button\"\r\n                          className=\"nombre-alumnos\"\r\n                        >{alumno.nombre}</button>\r\n                    </li>\r\n                    ))\r\n                     }\r\n                         \r\n                 </ul>\r\n                 \r\n                   \r\n                 \r\n            </div>\r\n      );\r\n}\r\n \r\nexport default ListaAlumnos;","import { useContext } from \"react\";\r\nimport alumnosContext from \"../context/alumnos/alumnosContext\";\r\nimport {FaSmile} from 'react-icons/fa'\r\nimport {FaSadCry} from 'react-icons/fa'\r\nimport {RiEdit2Fill,RiDeleteBin5Fill} from \"react-icons/ri\";\r\n\r\n\r\n\r\n\r\nconst Tema = ({tema}) => {\r\n\r\n    const alumnoContext = useContext(alumnosContext);\r\n     const {alumno,eliminarTema, obtenerTema, modificarEstado, setTemaActual} = alumnoContext;\r\n\r\n     const [alumnoClick] = alumno;\r\n\r\n     const onClickEliminarTema = id =>{\r\n        eliminarTema(id)\r\n        obtenerTema(alumnoClick.id)\r\n     }\r\n\r\n     const onClickModificarEstado = tema =>{\r\n           if(tema.estado) {\r\n               tema.estado =false;\r\n           }else {\r\n               tema.estado =true;\r\n           }\r\n           modificarEstado(tema);\r\n     }\r\n\r\n     const seleccionarTema = tema =>{\r\n        setTemaActual(tema)\r\n     }\r\n   \r\n\r\n\r\n    return (\r\n        <li className=\"card-tema\">\r\n            <p className=\"container-tema\">{tema.nombre}</p>\r\n            <p className=\"container-nota\">Nota:{tema.nota}</p>\r\n            <div className=\"estado\">\r\n                {tema.estado \r\n                \r\n                ? \r\n                \r\n                (\r\n                    <button\r\n                      className=\"btn-aprovado\"\r\n                      type=\"button\"\r\n                      onClick={()=>onClickModificarEstado(tema)}\r\n\r\n\r\n                    >\r\n                        <FaSmile/>\r\n                    </button>\r\n                )\r\n\r\n                :\r\n                    <button\r\n                    className=\"btn-suspendido\"\r\n                    type=\"button\"\r\n                    onClick={()=>onClickModificarEstado(tema)}\r\n                    \r\n\r\n                >\r\n                    <FaSadCry/>\r\n                </button>\r\n                \r\n                }\r\n            </div>\r\n\r\n            <div className=\"acciones\">\r\n                <button onClick={()=>seleccionarTema(tema)} type=\"button\" className=\"btn-acciones-editar\">\r\n                   <RiEdit2Fill/>\r\n                </button>\r\n                <button onClick={()=>onClickEliminarTema(tema.id)} type=\"button\" className=\"btn-acciones-eliminar\">\r\n                   <RiDeleteBin5Fill/>\r\n                </button>\r\n            </div>\r\n        </li>\r\n      );\r\n}\r\n \r\nexport default Tema;","export default __webpack_public_path__ + \"static/media/avatar.6ce16000.png\";","import { Fragment, useContext } from \"react\";\r\nimport Tema from \"./Tema\";\r\nimport alumnosContext from \"../context/alumnos/alumnosContext\";\r\nimport avatar from '../img/avatar.png'\r\n\r\n\r\n\r\n\r\n\r\nconst ListaTemas = () => {\r\n\r\n    const alumnoContext = useContext(alumnosContext);\r\n     const { alumno, temasalumno, eliminarAlumno } = alumnoContext;\r\n\r\n     // si no hay alumno seleccionado\r\n     if(!alumno ) return <h2>Alumno</h2>\r\n\r\n     //Array destrcuturing\r\n     const [alumnoClick] = alumno;\r\n    \r\n    \r\n   \r\n\r\n    const onClickEliminar = () =>{\r\n        eliminarAlumno(alumnoClick.id)\r\n    }\r\n\r\n\r\n    return (\r\n        \r\n        <Fragment>\r\n            <div className=\"container-alumno\">\r\n              <div className=\"card-profile\">\r\n                <img alt=\"profile\" className=\"img-profile\"src={avatar}/>\r\n                <p>Alumno: {alumnoClick.nombre}</p>\r\n                \r\n              </div>\r\n            </div>\r\n            <ul className=\"listado-temas\">\r\n                {temasalumno.length === 0\r\n                    ?(<li><p>No hay información</p></li>)\r\n\r\n                    :temasalumno.map(tema =>(\r\n                        <Tema\r\n                           key={tema.id}\r\n                           tema ={tema}\r\n                        />\r\n                    ))\r\n                }\r\n                <p onClick={onClickEliminar} className=\"borrar-alumno\">Borrar Alumno &times;</p>\r\n            </ul>\r\n            \r\n        </Fragment>\r\n      );\r\n}\r\n \r\nexport default ListaTemas;","import { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\nconst Banner = ({usuario}) => {\r\n\r\n    \r\n\r\n      const {nombre} = usuario\r\n\r\n  \r\n\r\n  \r\n    \r\n    return (\r\n        <div className=\"container-hola-usuario\">\r\n              <div className=\"container-bienvenido\">\r\n                  <h4>Bienvenid@ <span>{nombre}</span></h4>\r\n                 <Link to = '/alumn-crud'><p>Cerrar sesión</p></Link>\r\n                 </div>\r\n            </div>\r\n      );\r\n}\r\n \r\nexport default Banner;","\r\n\r\n\r\nimport AgregarTema from './AgregarTema'\r\nimport ListaAlumnos from \"./ListaAlumnos\";\r\nimport ListaTemas from \"./ListaTemas\";\r\nimport Banner from './Banner';\r\n\r\nconst Crud = ({usuario, guardarUsuario}) => {\r\n\r\n \r\n\r\nreturn (\r\n        <div className=\"container-crud\">\r\n             \r\n             <ListaAlumnos\r\n             \r\n             />\r\n\r\n            <div className=\"container-content\">\r\n                <Banner\r\n                   usuario = {usuario}\r\n                   guardarUsuario = {guardarUsuario}\r\n                />\r\n                <AgregarTema\r\n                  \r\n\r\n                />\r\n                <div className=\"tareas\">\r\n                 <ListaTemas\r\n                   \r\n                 />     \r\n                </div>\r\n            </div>\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default Crud;","export const MOSTRAR_FORMULARIO = 'MOSTRAR_FORMULARIO';\r\nexport const OBTENER_ALUMNOS = 'OBTENER_ALUMNOS';\r\nexport const AGREGAR_ALUMNOS = 'AGREGAR_ALUMNOS';\r\nexport const MOSTRAR_ERROR = 'MOSTRAR_ERROR';\r\nexport const ALUMNO_CLICK = 'ALUMNO_CLICK';\r\nexport const ELIMINAR_ALUMNO = 'ELIMINAR_ALUMNO';                   \r\n\r\nexport const OBTENER_TEMA = 'OBTENER_TEMA';\r\nexport const AGREGAR_TEMA = 'AGREGAR_TEMA';\r\nexport const ERROR_FORMULARIO = 'ERROR_FORMULARIO';\r\nexport const ELIMINAR_TEMA = 'ELIMINAR_TEMA';\r\nexport const ESTADO_TEMA = 'ESTADO_TEMA';\r\n\r\n//editar\r\nexport const TEMA_ACTUAL = 'TEMA ACTUAL'// agrega al input el tema seleccionado y a editar\r\nexport const TEMA_ACTUALIZADO = 'TEMA_ACTUALIZADO'// agrega al state el nuevo tema editado \r\n\r\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA'\r\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA'\r\n\r\n\r\n\r\n\r\n\r\n","import {MOSTRAR_FORMULARIO,OBTENER_ALUMNOS,AGREGAR_ALUMNOS,MOSTRAR_ERROR,ALUMNO_CLICK,ELIMINAR_ALUMNO,OBTENER_TEMA,AGREGAR_TEMA,ERROR_FORMULARIO,ELIMINAR_TEMA,ESTADO_TEMA, TEMA_ACTUAL,TEMA_ACTUALIZADO} from \"../../types\";\r\n\r\n\r\nexport default (state, action) => {\r\n    switch(action.type){\r\n        \r\n        case MOSTRAR_FORMULARIO:\r\n             return{\r\n                 ...state,\r\n                 formulario: true\r\n                 \r\n             }\r\n        case OBTENER_ALUMNOS:\r\n            return {\r\n                ...state,\r\n                alumnosLista: action.payload\r\n            }\r\n\r\n        case AGREGAR_ALUMNOS:\r\n            return{\r\n                ...state,\r\n                alumnosLista: [...state.alumnosLista, action.payload],\r\n                formulario:false,\r\n                mostrarerror:false\r\n            }\r\n\r\n        case MOSTRAR_ERROR: \r\n        return{\r\n            ...state,\r\n            mostrarerror: true\r\n        }\r\n\r\n        case ALUMNO_CLICK:\r\n            return{\r\n                ...state,\r\n                alumno: state.alumnosLista.filter(alumno => alumno.id === action.payload)\r\n            }\r\n\r\n        case ELIMINAR_ALUMNO:\r\n            return{\r\n                ...state,\r\n                alumnosLista: state.alumnosLista.filter(alumno=> alumno.id !== action.payload),\r\n                alumno:null\r\n            }\r\n\r\n        case OBTENER_TEMA:\r\n            return{\r\n                ...state,\r\n                temasalumno: state.temas.filter(tema => tema.alumnoId === action.payload)\r\n\r\n            }\r\n\r\n        case AGREGAR_TEMA:\r\n            return{\r\n                ...state,\r\n                temas: [...state.temas, action.payload],\r\n                errorformulario:false\r\n            }\r\n\r\n        case ERROR_FORMULARIO:\r\n            return{\r\n                ...state,\r\n                errorformulario:true\r\n            }\r\n\r\n        case ELIMINAR_TEMA:\r\n            return{\r\n                ...state,\r\n                temas: state.temas.filter(tema => tema.id !== action.payload)\r\n            }\r\n\r\n\r\n        case TEMA_ACTUALIZADO:\r\n        case ESTADO_TEMA:\r\n            return {\r\n                ...state,\r\n                temas: state.temas.map(tarea=>tarea.id === action.payload.id ? action.payload   :tarea),\r\n                temaseleccionado:null\r\n                // si el id coincide con el 'click' se ejecuta la fn,\r\n                //sino coincide, entonces se queda el estado como esta.\r\n            }\r\n\r\n        case TEMA_ACTUAL:\r\n        return{\r\n            ...state,\r\n            temaseleccionado : action.payload\r\n        }\r\n\r\n       \r\n\r\n       default:\r\n             return state;\r\n    }\r\n}\r\n ","import { useReducer,} from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport alumnosContext from \"./alumnosContext\";\r\nimport alumnosReducer from \"./alumnosReducer\";\r\n\r\nimport {MOSTRAR_FORMULARIO,OBTENER_ALUMNOS,AGREGAR_ALUMNOS,MOSTRAR_ERROR,ALUMNO_CLICK,ELIMINAR_ALUMNO,OBTENER_TEMA,AGREGAR_TEMA,ERROR_FORMULARIO,ELIMINAR_TEMA,ESTADO_TEMA,TEMA_ACTUAL,TEMA_ACTUALIZADO} from \"../../types\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst AlumnosState = props =>{\r\n\r\n    const alumnosLista = []\r\n\r\n    \r\n   \r\n   \r\n\r\n    const initialState = {\r\n             alumnosLista : [],\r\n             formulario: false,\r\n             mostrarerror: false,\r\n             alumno: null,\r\n             temas:[],\r\n             temasalumno:null,\r\n             errorformulario:false,\r\n             temaseleccionado: null,\r\n            \r\n    }\r\n\r\n    //dispatch para ejecutar las acciones\r\n    const [state,dispatch] = useReducer(alumnosReducer, initialState)\r\n\r\n    // Serie de funciones para el crud de proyectos\r\n\r\n\r\n\r\n    const mostrarFormulario = ()=>{\r\n        dispatch({\r\n            type: MOSTRAR_FORMULARIO\r\n            \r\n        })\r\n    }\r\n\r\n    // Obtener los alumnos\r\n    const obtenerAlumnos = () =>{\r\n        dispatch({\r\n             type: OBTENER_ALUMNOS,\r\n             payload: alumnosLista\r\n        })\r\n    }\r\n\r\n    const agregarAlumnos = alumno =>{\r\n        alumno.id = uuidv4()\r\n        dispatch({\r\n            type: AGREGAR_ALUMNOS,\r\n            payload: alumno\r\n        })\r\n    }\r\n\r\n    const mostrarError = () =>{\r\n        dispatch({\r\n            type: MOSTRAR_ERROR\r\n        })\r\n    }\r\n    //seleccion el alumno \r\n    const alumnoClick = alumnoId => {\r\n        dispatch({\r\n            type:ALUMNO_CLICK,\r\n            payload: alumnoId\r\n        })\r\n\r\n    }\r\n\r\n    const eliminarAlumno = alumnoId =>{\r\n        dispatch({\r\n            type: ELIMINAR_ALUMNO,\r\n            payload: alumnoId\r\n        })\r\n    }\r\n\r\n    const obtenerTema = alumnoId =>{\r\n        dispatch({\r\n            type: OBTENER_TEMA,\r\n            payload: alumnoId\r\n        })\r\n    }\r\n\r\n    const agregarTema = tema =>{\r\n        tema.id = uuidv4() \r\n        dispatch({\r\n            \r\n            type: AGREGAR_TEMA,\r\n            payload: tema\r\n        })\r\n    }\r\n\r\n    const errorFormulario = () =>{\r\n        dispatch({\r\n            type: ERROR_FORMULARIO\r\n\r\n        })\r\n    }\r\n\r\n    const eliminarTema = id =>{\r\n        dispatch({\r\n            type: ELIMINAR_TEMA,\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    const modificarEstado = tema =>{\r\n        dispatch({\r\n            type: ESTADO_TEMA,\r\n            payload: tema\r\n        })\r\n    }\r\n\r\n    // extrae un tema para editarlo\r\n    const setTemaActual = tema =>{\r\n        dispatch({\r\n            type: TEMA_ACTUAL,\r\n            payload: tema\r\n        })\r\n    }\r\n\r\n    const actualizarTema = tema =>{\r\n        dispatch({\r\n            type: TEMA_ACTUALIZADO,\r\n            payload:tema\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    \r\n  \r\n    return (\r\n        <alumnosContext.Provider\r\n           value ={{\r\n                alumnosLista: state.alumnosLista,\r\n                formulario: state.formulario,\r\n                mostrarerror: state.mostrarerror,\r\n                alumno: state.alumno,\r\n                temas: state.temas,\r\n                temasalumno: state.temasalumno,\r\n                errorformulario: state.errorformulario,\r\n                temaseleccionado: state.temaseleccionado,\r\n                \r\n                mostrarFormulario,\r\n                obtenerAlumnos,\r\n                agregarAlumnos,\r\n                mostrarError,\r\n                alumnoClick,\r\n                eliminarAlumno,\r\n                obtenerTema,\r\n                agregarTema,\r\n                errorFormulario,\r\n                eliminarTema,\r\n                modificarEstado,\r\n                setTemaActual,\r\n                actualizarTema,\r\n                \r\n                \r\n           }}\r\n        >\r\n            {props.children}\r\n        </alumnosContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AlumnosState;","import { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\nimport Login from './components/Login';\r\nimport Crud from './components/Crud';\r\nimport AlumnosState from './context/alumnos/alumnosState'\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [usuario, guardarUsuario] = useState({\r\n    nombre:''\r\n })\r\n\r\n   \r\n\r\n  return (\r\n    \r\n    <AlumnosState>\r\n      \r\n        <Router>\r\n          <Switch>\r\n            <Route exact path =\"/alumn-crud\"\r\n             render= {props => (\r\n               <Login {...props} usuario= {usuario} guardarUsuario = {guardarUsuario}/>\r\n             )}/>\r\n            <Route exact path = \"/alumn-crud/crud\" render = {props => (\r\n              <Crud {...props} usuario= {usuario} guardarUsuario = {guardarUsuario}/>\r\n            )}/>\r\n          </Switch>\r\n       </Router>\r\n       \r\n    \r\n  </AlumnosState>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}